version: '3'

services:

  admin:
    build:
      context: ./admin
    command: sh -c "rm -rf /build/* && cp -r /usr/share/nginx/html/* /build"
    container_name: ${COMPOSE_PROJECT_NAME-rsd}-admin
    image: ${COMPOSE_PROJECT_NAME-rsd}/admin
    logging:
      driver: "json-file"
      options:
        max-file: "2"
        max-size: "1m"
    volumes:
      - static_admin:/build

  auth:
    build:
      context: ./auth-github
    container_name: ${COMPOSE_PROJECT_NAME-rsd}-authentication
    environment:
      # user should not have to change the values of the following environment variables:
      AUTH_CALLBACK_URL: /admin
      AUTH_ROOT: /auth
      # user needs to assign values to the following environment variables:
      AUTH_GITHUB_CLIENT_ID: ${AUTH_GITHUB_CLIENT_ID:?Required variable AUTH_GITHUB_CLIENT_ID not set or empty. Perhaps you forgot to define it in '.env'?}
      AUTH_GITHUB_CLIENT_SECRET: ${AUTH_GITHUB_CLIENT_SECRET:?Required variable AUTH_GITHUB_CLIENT_SECRET not set or empty. Perhaps you forgot to define it in '.env'?}
      AUTH_GITHUB_ORGANIZATION: ${AUTH_GITHUB_ORGANIZATION:?Required variable AUTH_GITHUB_ORGANIZATION not set or empty. Perhaps you forgot to define it in '.env'?}
      JWT_SECRET: ${JWT_SECRET:?Required variable JWT_SECRET not set or empty. Perhaps you forgot to define it in '.env'?}
    image: ${COMPOSE_PROJECT_NAME-rsd}/authentication
    logging:
      driver: "json-file"
      options:
        max-file: "2"
        max-size: "1m"

  backend:
    build:
      context: ./backend
    container_name: ${COMPOSE_PROJECT_NAME-rsd}-backend
    depends_on:
      - database
    environment:
      # user should not have to change the values of the following environment variables:
      BACKEND_ROOT: /api
      DATABASE_HOST: database
      DATABASE_NAME: rsd
      DATABASE_PORT: 27017
      SCHEMAS_PATH: schemas
      # user needs to assign values to the following environment variables:
      DOMAIN: ${DOMAIN:?Required variable DOMAIN not set or empty. Perhaps you forgot to define it in '.env'?}
      JWT_SECRET: ${JWT_SECRET:?Required variable JWT_SECRET not set or empty. Perhaps you forgot to define it in '.env'?}
    image: ${COMPOSE_PROJECT_NAME-rsd}/backend
    logging:
      driver: "json-file"
      options:
        max-file: "2"
        max-size: "10m"

  backup:
    build:
      context: ./backup
    container_name: ${COMPOSE_PROJECT_NAME-rsd}-backup
    depends_on:
      - database
    environment:
      # user should not have to change the values of the following environment variables:
      DATABASE_HOST: database
      DATABASE_NAME: rsd
      DATABASE_PORT: 27017
      # user needs to assign values to the following environment variables:
      BACKUP_CMD: ${BACKUP_CMD:?Required variable BACKUP_CMD not set or empty. Perhaps you forgot to define it in '.env'?}
    image: ${COMPOSE_PROJECT_NAME-rsd}/backup
    logging:
      driver: "json-file"
      options:
        max-file: "2"
        max-size: "1m"

  database:
    build:
      context: ./database
    command: --bind_ip 0.0.0.0
    container_name: ${COMPOSE_PROJECT_NAME-rsd}-database
    entrypoint: /mongo.sh
    image: ${COMPOSE_PROJECT_NAME-rsd}/database
    logging:
      driver: "json-file"
      options:
        max-file: "2"
        max-size: "30m"
    volumes:
      - ./docker-volumes/db:/data/db

  frontend:
    build:
      context: ./frontend
    container_name: ${COMPOSE_PROJECT_NAME-rsd}-frontend
    depends_on:
      - backend
    environment:
      # user should not have to change the values of the following environment variables:
      BACKEND_URL: http://backend:5001/api
    image: ${COMPOSE_PROJECT_NAME-rsd}/frontend
    logging:
      driver: "json-file"
      options:
        max-file: "2"
        max-size: "5m"
    volumes:
      - static_frontend:/shared_static
      - ./docker-volumes/oaipmh-cache:/static/oaipmh-cache
      - ./frontend:/src

  graphs:
    build:
      context: ./graphs
    command: sh -c "rm -rf /static_graphs/* && cp -r /usr/share/nginx/html/* /static_graphs/"
    container_name: ${COMPOSE_PROJECT_NAME-rsd}-graphs
    depends_on:
      - backend
    image: ${COMPOSE_PROJECT_NAME-rsd}/graphs
    logging:
      driver: "json-file"
      options:
        max-file: "2"
        max-size: "1m"
    volumes:
      - static_graphs:/static_graphs

  harvesting:
    build:
      context: ./harvesting
    command: sh -c "cp -r /var/www/index.html /static_schedule/ && crond -d7 -f"
    container_name: ${COMPOSE_PROJECT_NAME-rsd}-harvesting
    depends_on:
      - backend
      - database
    environment:
      # user should not have to change the values of the following environment variables:
      BACKEND_URL: http://backend:5001/api
      DATABASE_HOST: database
      DATABASE_NAME: rsd
      DATABASE_PORT: 27017
      # user needs to assign values to the following environment variables:
      GITHUB_ACCESS_TOKEN: ${GITHUB_ACCESS_TOKEN:?Required variable GITHUB_ACCESS_TOKEN not set or empty. Perhaps you forgot to define it in '.env'?}
      JWT_SECRET: ${JWT_SECRET:?Required variable JWT_SECRET not set or empty. Perhaps you forgot to define it in '.env'?}
      ZENODO_ACCESS_TOKEN: ${ZENODO_ACCESS_TOKEN:?Required variable ZENODO_ACCESS_TOKEN not set or empty. Perhaps you forgot to define it in '.env'?}
      ZOTERO_API_KEY: ${ZOTERO_API_KEY:?Required variable ZOTERO_API_KEY not set or empty. Perhaps you forgot to define it in '.env'?}
      ZOTERO_LIBRARY: ${ZOTERO_LIBRARY:?Required variable ZOTERO_LIBRARY not set or empty. Perhaps you forgot to define it in '.env'?}
    image: ${COMPOSE_PROJECT_NAME-rsd}/harvesting
    logging:
      driver: "json-file"
      options:
        max-file: "2"
        max-size: "80m"
    volumes:
      - ./docker-volumes/oaipmh-cache:/app/oaipmh-cache
      - static_schedule:/static_schedule

  reverse-proxy:
    build:
      context: ./reverse-proxy
    container_name: ${COMPOSE_PROJECT_NAME-rsd}-reverse-proxy
    depends_on:
      - frontend
      - backend
      - admin
      - auth
      - graphs
    image: ${COMPOSE_PROJECT_NAME-rsd}/reverse_proxy
    logging:
      driver: "json-file"
      options:
        max-file: "2"
        max-size: "20m"
    restart: unless-stopped
    volumes:
      - static_admin:/static_admin:ro
      - static_frontend:/static_frontend:ro
      - static_graphs:/static_graphs:ro
      - static_schedule:/static_schedule:ro
    ports:
      - 443:443
      - 80:80

volumes:
  static_admin:
  static_frontend:
  static_graphs:
  static_schedule:
